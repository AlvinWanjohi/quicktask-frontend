{"ast":null,"code":"import axios from \"axios\";\n\n// ✅ Define API Base URL - Ensure this matches your backend URL\nconst API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000/api\";\n\n// ✅ Create an Axios instance for reuse\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// ✅ Helper function for API errors\nconst handleApiError = (error, defaultMessage) => {\n  if (error.response) {\n    console.error(`${defaultMessage}:`, error.response.data);\n    throw new Error(error.response.data.message || defaultMessage);\n  } else if (error.request) {\n    console.error(`${defaultMessage}: No response from server`, error.request);\n    throw new Error(\"No response from server. Please check your network.\");\n  } else {\n    console.error(`${defaultMessage}:`, error.message);\n    throw new Error(error.message);\n  }\n};\n\n// ✅ Fetch all tasks (Updated to use Fetch API)\nexport const getTasks = async () => {\n  try {\n    const response = await fetch(`${API_URL}/tasks`);\n    if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error;\n  }\n};\n\n// ✅ Fetch a single task by ID\nexport const getTaskById = async (taskId, token) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch task with ID: ${taskId}`);\n  }\n};\n\n// ✅ Create a new task\nexport const createTask = async (taskData, token) => {\n  try {\n    const response = await apiClient.post(\"/tasks\", taskData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to create task\");\n  }\n};\n\n// ✅ Delete a task\nexport const deleteTask = async (taskId, token) => {\n  try {\n    const response = await apiClient.delete(`/tasks/${taskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to delete task with ID: ${taskId}`);\n  }\n};\n\n// ✅ Get bids for a task\nexport const getBidsByTaskId = async (taskId, token) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}/bids`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch bids for task ID: ${taskId}`);\n  }\n};\n\n// ✅ Submit a bid\nexport const submitBid = async (taskId, bidAmount, token) => {\n  try {\n    const response = await apiClient.post(`/tasks/${taskId}/bids`, {\n      bidAmount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to place bid on task ID: ${taskId}`);\n  }\n};\n\n// ✅ Accept a bid\nexport const acceptBid = async (bidId, token) => {\n  try {\n    const response = await apiClient.patch(`/bids/${bidId}/accept`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to accept bid ID: ${bidId}`);\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","handleApiError","error","defaultMessage","response","console","data","Error","message","request","getTasks","fetch","ok","json","getTaskById","taskId","token","get","Authorization","createTask","taskData","post","deleteTask","delete","getBidsByTaskId","submitBid","bidAmount","acceptBid","bidId","patch"],"sources":["/home/alvin/Documents/quicktask-frontend/src/services/taskService.js"],"sourcesContent":["import axios from \"axios\";\n\n// ✅ Define API Base URL - Ensure this matches your backend URL\nconst API_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:5000/api\"; \n\n// ✅ Create an Axios instance for reuse\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// ✅ Helper function for API errors\nconst handleApiError = (error, defaultMessage) => {\n  if (error.response) {\n    console.error(`${defaultMessage}:`, error.response.data);\n    throw new Error(error.response.data.message || defaultMessage);\n  } else if (error.request) {\n    console.error(`${defaultMessage}: No response from server`, error.request);\n    throw new Error(\"No response from server. Please check your network.\");\n  } else {\n    console.error(`${defaultMessage}:`, error.message);\n    throw new Error(error.message);\n  }\n};\n\n// ✅ Fetch all tasks (Updated to use Fetch API)\nexport const getTasks = async () => {\n  try {\n    const response = await fetch(`${API_URL}/tasks`);\n    if (!response.ok) throw new Error(\"Failed to fetch tasks\");\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error;\n  }\n};\n\n// ✅ Fetch a single task by ID\nexport const getTaskById = async (taskId, token) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch task with ID: ${taskId}`);\n  }\n};\n\n// ✅ Create a new task\nexport const createTask = async (taskData, token) => {\n  try {\n    const response = await apiClient.post(\"/tasks\", taskData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to create task\");\n  }\n};\n\n// ✅ Delete a task\nexport const deleteTask = async (taskId, token) => {\n  try {\n    const response = await apiClient.delete(`/tasks/${taskId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to delete task with ID: ${taskId}`);\n  }\n};\n\n// ✅ Get bids for a task\nexport const getBidsByTaskId = async (taskId, token) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}/bids`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch bids for task ID: ${taskId}`);\n  }\n};\n\n// ✅ Submit a bid\nexport const submitBid = async (taskId, bidAmount, token) => {\n  try {\n    const response = await apiClient.post(\n      `/tasks/${taskId}/bids`,\n      { bidAmount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to place bid on task ID: ${taskId}`);\n  }\n};\n\n// ✅ Accept a bid\nexport const acceptBid = async (bidId, token) => {\n  try {\n    const response = await apiClient.patch(\n      `/bids/${bidId}/accept`,\n      {},\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to accept bid ID: ${bidId}`);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}