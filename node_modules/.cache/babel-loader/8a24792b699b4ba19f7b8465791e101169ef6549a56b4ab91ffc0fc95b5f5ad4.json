{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/pages/Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport supabase from \"../utils/supabaseClient\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    if (!user) return; // Ensure user is logged in\n\n    const fetchNotifications = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from(\"notifications\").select(\"*\").eq(\"user_id\", user.id) // Fetch only for logged-in user\n        .order(\"created_at\", {\n          ascending: false\n        });\n        if (error) {\n          console.error(\"Error fetching notifications:\", error);\n          return;\n        }\n\n        // Update state with fetched notifications\n        setNotifications(data || []);\n        setUnreadCount((data || []).filter(n => !n.read).length);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n\n    // Supabase real-time updates for notifications\n    const subscription = supabase.channel(\"notifications\").on(\"postgres_changes\", {\n      event: \"INSERT\",\n      schema: \"public\",\n      table: \"notifications\"\n    }, fetchNotifications).subscribe();\n    return () => {\n      supabase.removeChannel(subscription);\n    };\n  }, [user]); // Runs only when `user` changes\n\n  const markAsRead = async () => {\n    try {\n      const {\n        error\n      } = await supabase.from(\"notifications\").update({\n        read: true\n      }).eq(\"user_id\", user.id);\n      if (error) {\n        console.error(\"Error marking notifications as read:\", error);\n        return;\n      }\n      setNotifications(notifications.map(n => ({\n        ...n,\n        read: true\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error updating notifications:\", error);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto bg-white shadow-lg p-6 rounded-lg text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mt-4\",\n          children: \"Please log in to view notifications.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white shadow-lg p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: [\"Notifications (\", unreadCount, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: markAsRead,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300\",\n          children: \"Mark All as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `p-4 border rounded ${notification.read ? \"bg-gray-200\" : \"bg-yellow-50\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: new Date(notification.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No notifications yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"GSTdIk4QtpaGdHcrRdE1x7ZGIbA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","useContext","supabase","AuthContext","jsxDEV","_jsxDEV","Notifications","_s","user","notifications","setNotifications","unreadCount","setUnreadCount","fetchNotifications","data","error","from","select","eq","id","order","ascending","console","filter","n","read","length","subscription","channel","on","event","schema","table","subscribe","removeChannel","markAsRead","update","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","notification","message","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/pages/Notifications.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport supabase from \"../utils/supabaseClient\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst Notifications = () => {\n  const { user } = useContext(AuthContext);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  useEffect(() => {\n    if (!user) return; // Ensure user is logged in\n\n    const fetchNotifications = async () => {\n      try {\n        const { data, error } = await supabase\n          .from(\"notifications\")\n          .select(\"*\")\n          .eq(\"user_id\", user.id) // Fetch only for logged-in user\n          .order(\"created_at\", { ascending: false });\n\n        if (error) {\n          console.error(\"Error fetching notifications:\", error);\n          return;\n        }\n\n        // Update state with fetched notifications\n        setNotifications(data || []);\n        setUnreadCount((data || []).filter(n => !n.read).length);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n\n    fetchNotifications();\n\n    // Supabase real-time updates for notifications\n    const subscription = supabase\n      .channel(\"notifications\")\n      .on(\"postgres_changes\", { event: \"INSERT\", schema: \"public\", table: \"notifications\" }, fetchNotifications)\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(subscription);\n    };\n  }, [user]); // Runs only when `user` changes\n\n  const markAsRead = async () => {\n    try {\n      const { error } = await supabase\n        .from(\"notifications\")\n        .update({ read: true })\n        .eq(\"user_id\", user.id);\n\n      if (error) {\n        console.error(\"Error marking notifications as read:\", error);\n        return;\n      }\n\n      setNotifications(notifications.map(n => ({ ...n, read: true })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error updating notifications:\", error);\n    }\n  };\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 p-6\">\n        <div className=\"max-w-3xl mx-auto bg-white shadow-lg p-6 rounded-lg text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-800\">Notifications</h2>\n          <p className=\"text-gray-500 mt-4\">Please log in to view notifications.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <div className=\"max-w-3xl mx-auto bg-white shadow-lg p-6 rounded-lg\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-2xl font-bold text-gray-800\">Notifications ({unreadCount})</h2>\n          <button\n            onClick={markAsRead}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300\"\n          >\n            Mark All as Read\n          </button>\n        </div>\n        {notifications.length > 0 ? (\n          <ul className=\"space-y-2\">\n            {notifications.map((notification) => (\n              <li\n                key={notification.id}\n                className={`p-4 border rounded ${notification.read ? \"bg-gray-200\" : \"bg-yellow-50\"}`}\n              >\n                <p className=\"text-gray-800\">{notification.message}</p>\n                <p className=\"text-xs text-gray-500\">{new Date(notification.created_at).toLocaleString()}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"text-gray-500\">No notifications yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}