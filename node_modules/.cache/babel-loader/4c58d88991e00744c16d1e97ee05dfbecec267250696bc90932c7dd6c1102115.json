{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\nconsole.log(\"API BASE URL:\", API_BASE_URL);\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Set or remove the Authorization header\nexport const setAuthToken = token => {\n  if (token) {\n    // Store token in localStorage and sessionStorage\n    localStorage.setItem(\"authToken\", token);\n    sessionStorage.setItem(\"authToken\", token);\n\n    // Set Authorization header for all requests\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    // Remove token from storage if no token is provided\n    localStorage.removeItem(\"authToken\");\n    sessionStorage.removeItem(\"authToken\");\n\n    // Delete Authorization header\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Initialize auth token from localStorage or sessionStorage if it exists\nconst authToken = localStorage.getItem(\"authToken\") || sessionStorage.getItem(\"authToken\");\nif (authToken) {\n  setAuthToken(authToken);\n}\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error(\"API Error:\", (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (error.response && error.response.status === 401) {\n    console.warn(\"Unauthorized: Token may have expired. Logging out...\");\n    setAuthToken(null);\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","console","log","apiClient","create","baseURL","headers","setAuthToken","token","localStorage","setItem","sessionStorage","defaults","common","removeItem","authToken","getItem","interceptors","response","use","error","_error$response","data","message","status","warn","window","location","href","Promise","reject"],"sources":["/home/alvin/Documents/quicktask-frontend/src/utils/apiClient.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\nconsole.log(\"API BASE URL:\", API_BASE_URL);\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Set or remove the Authorization header\nexport const setAuthToken = (token) => {\n  if (token) {\n    // Store token in localStorage and sessionStorage\n    localStorage.setItem(\"authToken\", token);\n    sessionStorage.setItem(\"authToken\", token);\n    \n    // Set Authorization header for all requests\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    // Remove token from storage if no token is provided\n    localStorage.removeItem(\"authToken\");\n    sessionStorage.removeItem(\"authToken\");\n\n    // Delete Authorization header\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Initialize auth token from localStorage or sessionStorage if it exists\nconst authToken = localStorage.getItem(\"authToken\") || sessionStorage.getItem(\"authToken\");\nif (authToken) {\n  setAuthToken(authToken);\n}\n\n\napiClient.interceptors.response.use(\n  (response) => response,  \n  (error) => {\n    console.error(\"API Error:\", error?.response?.data || error.message);\n\n    \n    if (error.response && error.response.status === 401) {\n      console.warn(\"Unauthorized: Token may have expired. Logging out...\");\n      setAuthToken(null); \n      window.location.href = \"/login\"; \n    }\n\n    return Promise.reject(error); \n  }\n);\n\nexport default apiClient;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAClFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,YAAY,CAAC;AAE1C,MAAMM,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC7BC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACT;IACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;IACxCG,cAAc,CAACD,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;;IAE1C;IACAL,SAAS,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;EACxE,CAAC,MAAM;IACL;IACAC,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;IACpCH,cAAc,CAACG,UAAU,CAAC,WAAW,CAAC;;IAEtC;IACA,OAAOX,SAAS,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,eAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,MAAME,SAAS,GAAGN,YAAY,CAACO,OAAO,CAAC,WAAW,CAAC,IAAIL,cAAc,CAACK,OAAO,CAAC,WAAW,CAAC;AAC1F,IAAID,SAAS,EAAE;EACbR,YAAY,CAACQ,SAAS,CAAC;AACzB;AAGAZ,SAAS,CAACc,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTpB,OAAO,CAACmB,KAAK,CAAC,YAAY,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEF,QAAQ,cAAAG,eAAA,uBAAfA,eAAA,CAAiBC,IAAI,KAAIF,KAAK,CAACG,OAAO,CAAC;EAGnE,IAAIH,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IACnDvB,OAAO,CAACwB,IAAI,CAAC,sDAAsD,CAAC;IACpElB,YAAY,CAAC,IAAI,CAAC;IAClBmB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}