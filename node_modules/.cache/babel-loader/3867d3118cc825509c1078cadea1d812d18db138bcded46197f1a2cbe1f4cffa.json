{"ast":null,"code":"export const updateUserProfile = async (userId, profileData) => {\n  try {\n    const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n    const token = localStorage.getItem(\"authToken\");\n    console.log(\"API BASE URL:\", API_BASE_URL);\n    console.log(\"Updating user profile for ID:\", userId, \"with data:\", profileData);\n    const response = await fetch(`${API_BASE_URL}/api/users/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token ? {\n          Authorization: `Bearer ${token}`\n        } : {})\n      },\n      body: JSON.stringify(profileData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"Profile update failed:\", errorData);\n      throw new Error(errorData.message || \"Failed to update user profile\");\n    }\n    const updatedUser = await response.json();\n    console.log(\"User profile updated successfully:\", updatedUser);\n    return updatedUser;\n  } catch (error) {\n    console.error(\"Error updating profile:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["updateUserProfile","userId","profileData","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","token","localStorage","getItem","console","log","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","errorData","json","error","Error","message","updatedUser"],"sources":["/home/alvin/Documents/quicktask-frontend/src/services/userService.js"],"sourcesContent":["export const updateUserProfile = async (userId, profileData) => {\n  try {\n    const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\"; \n    const token = localStorage.getItem(\"authToken\"); \n\n    console.log(\"API BASE URL:\", API_BASE_URL);\n    console.log(\"Updating user profile for ID:\", userId, \"with data:\", profileData);\n\n    const response = await fetch(`${API_BASE_URL}/api/users/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}), \n      },\n      body: JSON.stringify(profileData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"Profile update failed:\", errorData);\n      throw new Error(errorData.message || \"Failed to update user profile\");\n    }\n\n    const updatedUser = await response.json();\n    console.log(\"User profile updated successfully:\", updatedUser);\n    return updatedUser;\n  } catch (error) {\n    console.error(\"Error updating profile:\", error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,WAAW,KAAK;EAC9D,IAAI;IACF,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;IAClF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,YAAY,CAAC;IAC1CO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEV,MAAM,EAAE,YAAY,EAAEC,WAAW,CAAC;IAE/E,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,YAAY,cAAcF,MAAM,EAAE,EAAE;MAClEa,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,IAAIR,KAAK,GAAG;UAAES,aAAa,EAAE,UAAUT,KAAK;QAAG,CAAC,GAAG,CAAC,CAAC;MACvD,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACU,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCZ,OAAO,CAACa,KAAK,CAAC,wBAAwB,EAAEF,SAAS,CAAC;MAClD,MAAM,IAAIG,KAAK,CAACH,SAAS,CAACI,OAAO,IAAI,+BAA+B,CAAC;IACvE;IAEA,MAAMC,WAAW,GAAG,MAAMd,QAAQ,CAACU,IAAI,CAAC,CAAC;IACzCZ,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEe,WAAW,CAAC;IAC9D,OAAOA,WAAW;EACpB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}