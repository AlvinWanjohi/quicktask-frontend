{"ast":null,"code":"import apiClient from \"../utils/apiClient\";\nconst handleApiError = (error, defaultMessage) => {\n  var _error$response, _error$response$data;\n  console.error(defaultMessage, error);\n  throw new Error((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || defaultMessage);\n};\nexport const getTasks = async () => {\n  try {\n    const response = await apiClient.get(\"/tasks\");\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to fetch tasks\");\n  }\n};\nexport const getTaskById = async taskId => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}`);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch task with ID: ${taskId}`);\n  }\n};\nexport const createTask = async (taskData, token) => {\n  try {\n    const response = await apiClient.post(\"/tasks\", taskData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to create task\");\n  }\n};\nexport const deleteTask = async (taskId, token) => {\n  try {\n    const response = await apiClient.delete(`/tasks/${taskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to delete task with ID: ${taskId}`);\n  }\n};\nexport const getBidsByTaskId = async taskId => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}/bids`);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch bids for task ID: ${taskId}`);\n  }\n};\nexport const submitBid = async (taskId, bidAmount, token) => {\n  try {\n    const response = await apiClient.post(`/tasks/${taskId}/bids`, {\n      bidAmount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to place bid on task ID: ${taskId}`);\n  }\n};\nexport const acceptBid = async (bidId, token) => {\n  try {\n    const response = await apiClient.patch(`/bids/${bidId}/accept`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to accept bid ID: ${bidId}`);\n  }\n};","map":{"version":3,"names":["apiClient","handleApiError","error","defaultMessage","_error$response","_error$response$data","console","Error","response","data","message","getTasks","get","getTaskById","taskId","createTask","taskData","token","post","headers","Authorization","deleteTask","delete","getBidsByTaskId","submitBid","bidAmount","acceptBid","bidId","patch"],"sources":["/home/alvin/Documents/quicktask-frontend/src/services/taskService.js"],"sourcesContent":["import apiClient from \"../utils/apiClient\";\n\nconst handleApiError = (error, defaultMessage) => {\n  console.error(defaultMessage, error);\n  throw new Error(error?.response?.data?.message || defaultMessage);\n};\n\nexport const getTasks = async () => {\n  try {\n    const response = await apiClient.get(\"/tasks\");\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to fetch tasks\");\n  }\n};\n\n\nexport const getTaskById = async (taskId) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}`);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch task with ID: ${taskId}`);\n  }\n};\n\n\nexport const createTask = async (taskData, token) => {\n  try {\n    const response = await apiClient.post(\"/tasks\", taskData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, \"Failed to create task\");\n  }\n};\n\n\nexport const deleteTask = async (taskId, token) => {\n  try {\n    const response = await apiClient.delete(`/tasks/${taskId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to delete task with ID: ${taskId}`);\n  }\n};\n\n\nexport const getBidsByTaskId = async (taskId) => {\n  try {\n    const response = await apiClient.get(`/tasks/${taskId}/bids`);\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to fetch bids for task ID: ${taskId}`);\n  }\n};\n\n\nexport const submitBid = async (taskId, bidAmount, token) => {\n  try {\n    const response = await apiClient.post(\n      `/tasks/${taskId}/bids`,\n      { bidAmount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to place bid on task ID: ${taskId}`);\n  }\n};\n\nexport const acceptBid = async (bidId, token) => {\n  try {\n    const response = await apiClient.patch(\n      `/bids/${bidId}/accept`,\n      {},\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return response.data;\n  } catch (error) {\n    handleApiError(error, `Failed to accept bid ID: ${bidId}`);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}