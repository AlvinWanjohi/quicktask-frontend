{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/pages/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { FaPaperPlane, FaPlus, FaCalendarAlt, FaNewspaper } from \"react-icons/fa\";\nimport supabase from \"../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  userId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [newGroupName, setNewGroupName] = useState(\"\");\n  const [posts, setPosts] = useState([]); // Events & Newsletters\n  const [postContent, setPostContent] = useState(\"\");\n  const [postType, setPostType] = useState(\"event\");\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const [{\n        data: users\n      }, {\n        data: groups\n      }, {\n        data: messages\n      }, {\n        data: posts\n      }] = await Promise.all([supabase.from(\"users\").select(\"id, name\"), supabase.from(\"groups\").select(\"id, name\"), supabase.from(\"messages\").select(\"*\").order(\"created_at\", {\n        ascending: true\n      }), supabase.from(\"posts\").select(\"*\").order(\"created_at\", {\n        ascending: false\n      })]);\n      if (users) setUsers(users);\n      if (groups) setGroups(groups);\n      if (messages) setMessages(messages);\n      if (posts) setPosts(posts);\n    };\n    fetchData();\n\n    // Real-time subscriptions\n    const messageChannel = supabase.channel(\"messages\").on(\"postgres_changes\", {\n      event: \"INSERT\",\n      schema: \"public\",\n      table: \"messages\"\n    }, payload => {\n      setMessages(prev => [...prev, payload.new]);\n    }).subscribe();\n    const postChannel = supabase.channel(\"posts\").on(\"postgres_changes\", {\n      event: \"INSERT\",\n      schema: \"public\",\n      table: \"posts\"\n    }, payload => {\n      setPosts(prev => [payload.new, ...prev]);\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(messageChannel);\n      supabase.removeChannel(postChannel);\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!message.trim() || !selectedUser && !selectedGroup) return;\n    const newMessage = {\n      sender_id: userId,\n      receiver_id: selectedUser ? selectedUser.id : null,\n      group_id: selectedGroup ? selectedGroup.id : null,\n      content: message,\n      created_at: new Date().toISOString()\n    };\n    await supabase.from(\"messages\").insert([newMessage]);\n    setMessage(\"\");\n  };\n  const createGroup = async () => {\n    if (!newGroupName.trim()) return;\n    const {\n      data,\n      error\n    } = await supabase.from(\"groups\").insert([{\n      name: newGroupName\n    }]).select();\n    if (!error) {\n      setGroups(prev => [...prev, ...data]);\n      setNewGroupName(\"\");\n    }\n  };\n  const postUpdate = async () => {\n    if (!postContent.trim()) return;\n    const newPost = {\n      user_id: userId,\n      content: postContent,\n      type: postType,\n      // \"event\" or \"newsletter\"\n      created_at: new Date().toISOString()\n    };\n    await supabase.from(\"posts\").insert([newPost]);\n    setPostContent(\"\");\n  };\n  const filteredMessages = useMemo(() => {\n    return messages.filter(msg => selectedUser ? msg.sender_id === userId || msg.receiver_id === userId : selectedGroup ? msg.group_id === selectedGroup.id : false);\n  }, [messages, selectedUser, selectedGroup, userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen max-w-6xl mx-auto bg-gray-50 border rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 border-r p-4 overflow-y-auto bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 mb-2 cursor-pointer rounded-lg ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === user.id ? \"bg-blue-500 text-white\" : \"hover:bg-gray-200\"}`,\n        onClick: () => {\n          setSelectedUser(user);\n          setSelectedGroup(null);\n        },\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mt-6 mb-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" Groups\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 mb-2 cursor-pointer rounded-lg ${(selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.id) === group.id ? \"bg-green-500 text-white\" : \"hover:bg-gray-200\"}`,\n        onClick: () => {\n          setSelectedGroup(group);\n          setSelectedUser(null);\n        },\n        children: group.name\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New group name...\",\n          className: \"p-2 border rounded w-full\",\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-full bg-green-600 text-white p-2 rounded mt-2\",\n          onClick: createGroup,\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), \" Create Group\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-600 text-white text-center font-bold text-lg\",\n        children: selectedUser ? selectedUser.name : selectedGroup ? `Group: ${selectedGroup.name}` : \"Select a conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [filteredMessages.map(msg => {\n          var _users$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 mb-2 max-w-xs rounded-lg ${msg.sender_id === userId ? \"ml-auto bg-blue-500 text-white\" : \"bg-white\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-semibold\",\n              children: msg.sender_id === userId ? \"You\" : (_users$find = users.find(u => u.id === msg.sender_id)) === null || _users$find === void 0 ? void 0 : _users$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center p-3 border-t bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 border p-2 rounded-md outline-none\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"ml-2 bg-blue-600 text-white p-2 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 p-4 border-l bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), \" Events & Newsletters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full border p-2 rounded mt-2\",\n        placeholder: \"Write something...\",\n        value: postContent,\n        onChange: e => setPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-blue-600 text-white p-2 rounded mt-2\",\n        onClick: postUpdate,\n        children: [/*#__PURE__*/_jsxDEV(FaNewspaper, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), \" Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"ZQ4oEzMYYxPuc9gg/EHaLC++RGE=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","FaPaperPlane","FaPlus","FaCalendarAlt","FaNewspaper","supabase","jsxDEV","_jsxDEV","Messages","userId","_s","messages","setMessages","message","setMessage","selectedUser","setSelectedUser","users","setUsers","groups","setGroups","selectedGroup","setSelectedGroup","newGroupName","setNewGroupName","posts","setPosts","postContent","setPostContent","postType","setPostType","messagesEndRef","fetchData","data","Promise","all","from","select","order","ascending","messageChannel","channel","on","event","schema","table","payload","prev","new","subscribe","postChannel","removeChannel","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","newMessage","sender_id","receiver_id","id","group_id","content","created_at","Date","toISOString","insert","createGroup","error","name","postUpdate","newPost","user_id","type","filteredMessages","filter","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","group","placeholder","value","onChange","e","target","_users$find","find","u","ref","_c","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { FaPaperPlane, FaPlus, FaCalendarAlt, FaNewspaper } from \"react-icons/fa\";\nimport supabase from \"../utils/supabaseClient\";\n\nconst Messages = ({ userId }) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [newGroupName, setNewGroupName] = useState(\"\");\n  const [posts, setPosts] = useState([]); // Events & Newsletters\n  const [postContent, setPostContent] = useState(\"\");\n  const [postType, setPostType] = useState(\"event\");\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const [{ data: users }, { data: groups }, { data: messages }, { data: posts }] = await Promise.all([\n        supabase.from(\"users\").select(\"id, name\"),\n        supabase.from(\"groups\").select(\"id, name\"),\n        supabase.from(\"messages\").select(\"*\").order(\"created_at\", { ascending: true }),\n        supabase.from(\"posts\").select(\"*\").order(\"created_at\", { ascending: false }),\n      ]);\n\n      if (users) setUsers(users);\n      if (groups) setGroups(groups);\n      if (messages) setMessages(messages);\n      if (posts) setPosts(posts);\n    };\n\n    fetchData();\n\n    // Real-time subscriptions\n    const messageChannel = supabase\n      .channel(\"messages\")\n      .on(\"postgres_changes\", { event: \"INSERT\", schema: \"public\", table: \"messages\" }, (payload) => {\n        setMessages((prev) => [...prev, payload.new]);\n      })\n      .subscribe();\n\n    const postChannel = supabase\n      .channel(\"posts\")\n      .on(\"postgres_changes\", { event: \"INSERT\", schema: \"public\", table: \"posts\" }, (payload) => {\n        setPosts((prev) => [payload.new, ...prev]);\n      })\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(messageChannel);\n      supabase.removeChannel(postChannel);\n    };\n  }, []);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!message.trim() || (!selectedUser && !selectedGroup)) return;\n\n    const newMessage = {\n      sender_id: userId,\n      receiver_id: selectedUser ? selectedUser.id : null,\n      group_id: selectedGroup ? selectedGroup.id : null,\n      content: message,\n      created_at: new Date().toISOString(),\n    };\n\n    await supabase.from(\"messages\").insert([newMessage]);\n    setMessage(\"\");\n  };\n\n  const createGroup = async () => {\n    if (!newGroupName.trim()) return;\n\n    const { data, error } = await supabase.from(\"groups\").insert([{ name: newGroupName }]).select();\n    if (!error) {\n      setGroups((prev) => [...prev, ...data]);\n      setNewGroupName(\"\");\n    }\n  };\n\n  const postUpdate = async () => {\n    if (!postContent.trim()) return;\n\n    const newPost = {\n      user_id: userId,\n      content: postContent,\n      type: postType, // \"event\" or \"newsletter\"\n      created_at: new Date().toISOString(),\n    };\n\n    await supabase.from(\"posts\").insert([newPost]);\n    setPostContent(\"\");\n  };\n\n  const filteredMessages = useMemo(() => {\n    return messages.filter((msg) =>\n      selectedUser\n        ? msg.sender_id === userId || msg.receiver_id === userId\n        : selectedGroup\n        ? msg.group_id === selectedGroup.id\n        : false\n    );\n  }, [messages, selectedUser, selectedGroup, userId]);\n\n  return (\n    <div className=\"flex h-screen max-w-6xl mx-auto bg-gray-50 border rounded-lg shadow-md\">\n      {/* Sidebar */}\n      <div className=\"w-1/3 border-r p-4 overflow-y-auto bg-white\">\n        <h2 className=\"text-lg font-bold mb-4\">Messages</h2>\n\n        {/* Users List */}\n        {users.map((user) => (\n          <div\n            key={user.id}\n            className={`p-3 mb-2 cursor-pointer rounded-lg ${\n              selectedUser?.id === user.id ? \"bg-blue-500 text-white\" : \"hover:bg-gray-200\"\n            }`}\n            onClick={() => {\n              setSelectedUser(user);\n              setSelectedGroup(null);\n            }}\n          >\n            {user.name}\n          </div>\n        ))}\n\n        {/* Groups List */}\n        <h2 className=\"text-lg font-bold mt-6 mb-2 flex items-center\">\n          <FaPlus className=\"mr-2\" /> Groups\n        </h2>\n        {groups.map((group) => (\n          <div\n            key={group.id}\n            className={`p-3 mb-2 cursor-pointer rounded-lg ${\n              selectedGroup?.id === group.id ? \"bg-green-500 text-white\" : \"hover:bg-gray-200\"\n            }`}\n            onClick={() => {\n              setSelectedGroup(group);\n              setSelectedUser(null);\n            }}\n          >\n            {group.name}\n          </div>\n        ))}\n\n        {/* Create Group */}\n        <div className=\"mt-4\">\n          <input\n            type=\"text\"\n            placeholder=\"New group name...\"\n            className=\"p-2 border rounded w-full\"\n            value={newGroupName}\n            onChange={(e) => setNewGroupName(e.target.value)}\n          />\n          <button className=\"w-full bg-green-600 text-white p-2 rounded mt-2\" onClick={createGroup}>\n            <FaPlus className=\"mr-2\" /> Create Group\n          </button>\n        </div>\n      </div>\n\n      {/* Chat Window */}\n      <div className=\"flex-1 flex flex-col\">\n        <div className=\"p-4 bg-blue-600 text-white text-center font-bold text-lg\">\n          {selectedUser ? selectedUser.name : selectedGroup ? `Group: ${selectedGroup.name}` : \"Select a conversation\"}\n        </div>\n\n        <div className=\"flex-1 p-4 overflow-y-auto\">\n          {filteredMessages.map((msg) => (\n            <div key={msg.id} className={`p-3 mb-2 max-w-xs rounded-lg ${msg.sender_id === userId ? \"ml-auto bg-blue-500 text-white\" : \"bg-white\"}`}>\n              <p className=\"text-sm font-semibold\">{msg.sender_id === userId ? \"You\" : users.find(u => u.id === msg.sender_id)?.name}</p>\n              <p>{msg.content}</p>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Message Input */}\n        <div className=\"flex items-center p-3 border-t bg-white\">\n          <input type=\"text\" className=\"flex-1 border p-2 rounded-md outline-none\" placeholder=\"Type a message...\" value={message} onChange={(e) => setMessage(e.target.value)} />\n          <button onClick={sendMessage} className=\"ml-2 bg-blue-600 text-white p-2 rounded-md\">\n            <FaPaperPlane />\n          </button>\n        </div>\n      </div>\n\n      {/* Events & Newsletters */}\n      <div className=\"w-1/3 p-4 border-l bg-white\">\n        <h2 className=\"text-lg font-bold flex items-center\">\n          <FaCalendarAlt className=\"mr-2\" /> Events & Newsletters\n        </h2>\n        <textarea className=\"w-full border p-2 rounded mt-2\" placeholder=\"Write something...\" value={postContent} onChange={(e) => setPostContent(e.target.value)} />\n        <button className=\"w-full bg-blue-600 text-white p-2 rounded mt-2\" onClick={postUpdate}>\n          <FaNewspaper className=\"mr-2\" /> Post\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnE,SAASC,YAAY,EAAEC,MAAM,EAAEC,aAAa,EAAEC,WAAW,QAAQ,gBAAgB;AACjF,OAAOC,QAAQ,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAMkC,cAAc,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAM,CAAC;QAAEC,IAAI,EAAEhB;MAAM,CAAC,EAAE;QAAEgB,IAAI,EAAEd;MAAO,CAAC,EAAE;QAAEc,IAAI,EAAEtB;MAAS,CAAC,EAAE;QAAEsB,IAAI,EAAER;MAAM,CAAC,CAAC,GAAG,MAAMS,OAAO,CAACC,GAAG,CAAC,CACjG9B,QAAQ,CAAC+B,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC,EACzChC,QAAQ,CAAC+B,IAAI,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC,EAC1ChC,QAAQ,CAAC+B,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC,EAC9ElC,QAAQ,CAAC+B,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC,CAC7E,CAAC;MAEF,IAAItB,KAAK,EAAEC,QAAQ,CAACD,KAAK,CAAC;MAC1B,IAAIE,MAAM,EAAEC,SAAS,CAACD,MAAM,CAAC;MAC7B,IAAIR,QAAQ,EAAEC,WAAW,CAACD,QAAQ,CAAC;MACnC,IAAIc,KAAK,EAAEC,QAAQ,CAACD,KAAK,CAAC;IAC5B,CAAC;IAEDO,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMQ,cAAc,GAAGnC,QAAQ,CAC5BoC,OAAO,CAAC,UAAU,CAAC,CACnBC,EAAE,CAAC,kBAAkB,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAGC,OAAO,IAAK;MAC7FlC,WAAW,CAAEmC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAACE,GAAG,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDC,SAAS,CAAC,CAAC;IAEd,MAAMC,WAAW,GAAG7C,QAAQ,CACzBoC,OAAO,CAAC,OAAO,CAAC,CAChBC,EAAE,CAAC,kBAAkB,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAAGC,OAAO,IAAK;MAC1FpB,QAAQ,CAAEqB,IAAI,IAAK,CAACD,OAAO,CAACE,GAAG,EAAE,GAAGD,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDE,SAAS,CAAC,CAAC;IAEd,OAAO,MAAM;MACX5C,QAAQ,CAAC8C,aAAa,CAACX,cAAc,CAAC;MACtCnC,QAAQ,CAAC8C,aAAa,CAACD,WAAW,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENpD,SAAS,CAAC,MAAM;IAAA,IAAAsD,qBAAA;IACd,CAAAA,qBAAA,GAAArB,cAAc,CAACsB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAC5C,QAAQ,CAAC,CAAC;EAEd,MAAM6C,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC3C,OAAO,CAAC4C,IAAI,CAAC,CAAC,IAAK,CAAC1C,YAAY,IAAI,CAACM,aAAc,EAAE;IAE1D,MAAMqC,UAAU,GAAG;MACjBC,SAAS,EAAElD,MAAM;MACjBmD,WAAW,EAAE7C,YAAY,GAAGA,YAAY,CAAC8C,EAAE,GAAG,IAAI;MAClDC,QAAQ,EAAEzC,aAAa,GAAGA,aAAa,CAACwC,EAAE,GAAG,IAAI;MACjDE,OAAO,EAAElD,OAAO;MAChBmD,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAED,MAAM7D,QAAQ,CAAC+B,IAAI,CAAC,UAAU,CAAC,CAAC+B,MAAM,CAAC,CAACT,UAAU,CAAC,CAAC;IACpD5C,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMsD,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC7C,YAAY,CAACkC,IAAI,CAAC,CAAC,EAAE;IAE1B,MAAM;MAAExB,IAAI;MAAEoC;IAAM,CAAC,GAAG,MAAMhE,QAAQ,CAAC+B,IAAI,CAAC,QAAQ,CAAC,CAAC+B,MAAM,CAAC,CAAC;MAAEG,IAAI,EAAE/C;IAAa,CAAC,CAAC,CAAC,CAACc,MAAM,CAAC,CAAC;IAC/F,IAAI,CAACgC,KAAK,EAAE;MACVjD,SAAS,CAAE2B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGd,IAAI,CAAC,CAAC;MACvCT,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,MAAM+C,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC5C,WAAW,CAAC8B,IAAI,CAAC,CAAC,EAAE;IAEzB,MAAMe,OAAO,GAAG;MACdC,OAAO,EAAEhE,MAAM;MACfsD,OAAO,EAAEpC,WAAW;MACpB+C,IAAI,EAAE7C,QAAQ;MAAE;MAChBmC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACrC,CAAC;IAED,MAAM7D,QAAQ,CAAC+B,IAAI,CAAC,OAAO,CAAC,CAAC+B,MAAM,CAAC,CAACK,OAAO,CAAC,CAAC;IAC9C5C,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAM+C,gBAAgB,GAAG3E,OAAO,CAAC,MAAM;IACrC,OAAOW,QAAQ,CAACiE,MAAM,CAAEC,GAAG,IACzB9D,YAAY,GACR8D,GAAG,CAAClB,SAAS,KAAKlD,MAAM,IAAIoE,GAAG,CAACjB,WAAW,KAAKnD,MAAM,GACtDY,aAAa,GACbwD,GAAG,CAACf,QAAQ,KAAKzC,aAAa,CAACwC,EAAE,GACjC,KACN,CAAC;EACH,CAAC,EAAE,CAAClD,QAAQ,EAAEI,YAAY,EAAEM,aAAa,EAAEZ,MAAM,CAAC,CAAC;EAEnD,oBACEF,OAAA;IAAKuE,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBAErFxE,OAAA;MAAKuE,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAC1DxE,OAAA;QAAIuE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGnDlE,KAAK,CAACmE,GAAG,CAAEC,IAAI,iBACd9E,OAAA;QAEEuE,SAAS,EAAE,sCACT,CAAA/D,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE8C,EAAE,MAAKwB,IAAI,CAACxB,EAAE,GAAG,wBAAwB,GAAG,mBAAmB,EAC5E;QACHyB,OAAO,EAAEA,CAAA,KAAM;UACbtE,eAAe,CAACqE,IAAI,CAAC;UACrB/D,gBAAgB,CAAC,IAAI,CAAC;QACxB,CAAE;QAAAyD,QAAA,EAEDM,IAAI,CAACf;MAAI,GATLe,IAAI,CAACxB,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUT,CACN,CAAC,eAGF5E,OAAA;QAAIuE,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC3DxE,OAAA,CAACL,MAAM;UAAC4E,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,WAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJhE,MAAM,CAACiE,GAAG,CAAEG,KAAK,iBAChBhF,OAAA;QAEEuE,SAAS,EAAE,sCACT,CAAAzD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEwC,EAAE,MAAK0B,KAAK,CAAC1B,EAAE,GAAG,yBAAyB,GAAG,mBAAmB,EAC/E;QACHyB,OAAO,EAAEA,CAAA,KAAM;UACbhE,gBAAgB,CAACiE,KAAK,CAAC;UACvBvE,eAAe,CAAC,IAAI,CAAC;QACvB,CAAE;QAAA+D,QAAA,EAEDQ,KAAK,CAACjB;MAAI,GATNiB,KAAK,CAAC1B,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACN,CAAC,eAGF5E,OAAA;QAAKuE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBxE,OAAA;UACEmE,IAAI,EAAC,MAAM;UACXc,WAAW,EAAC,mBAAmB;UAC/BV,SAAS,EAAC,2BAA2B;UACrCW,KAAK,EAAElE,YAAa;UACpBmE,QAAQ,EAAGC,CAAC,IAAKnE,eAAe,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACF5E,OAAA;UAAQuE,SAAS,EAAC,iDAAiD;UAACQ,OAAO,EAAElB,WAAY;UAAAW,QAAA,gBACvFxE,OAAA,CAACL,MAAM;YAAC4E,SAAS,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,iBAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN5E,OAAA;MAAKuE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCxE,OAAA;QAAKuE,SAAS,EAAC,0DAA0D;QAAAC,QAAA,EACtEhE,YAAY,GAAGA,YAAY,CAACuD,IAAI,GAAGjD,aAAa,GAAG,UAAUA,aAAa,CAACiD,IAAI,EAAE,GAAG;MAAuB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eAEN5E,OAAA;QAAKuE,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACxCJ,gBAAgB,CAACS,GAAG,CAAEP,GAAG;UAAA,IAAAgB,WAAA;UAAA,oBACxBtF,OAAA;YAAkBuE,SAAS,EAAE,gCAAgCD,GAAG,CAAClB,SAAS,KAAKlD,MAAM,GAAG,gCAAgC,GAAG,UAAU,EAAG;YAAAsE,QAAA,gBACtIxE,OAAA;cAAGuE,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAEF,GAAG,CAAClB,SAAS,KAAKlD,MAAM,GAAG,KAAK,IAAAoF,WAAA,GAAG5E,KAAK,CAAC6E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAKgB,GAAG,CAAClB,SAAS,CAAC,cAAAkC,WAAA,uBAAvCA,WAAA,CAAyCvB;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3H5E,OAAA;cAAAwE,QAAA,EAAIF,GAAG,CAACd;YAAO;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFZN,GAAG,CAAChB,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGX,CAAC;QAAA,CACP,CAAC,eACF5E,OAAA;UAAKyF,GAAG,EAAEjE;QAAe;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,yCAAyC;QAAAC,QAAA,gBACtDxE,OAAA;UAAOmE,IAAI,EAAC,MAAM;UAACI,SAAS,EAAC,2CAA2C;UAACU,WAAW,EAAC,mBAAmB;UAACC,KAAK,EAAE5E,OAAQ;UAAC6E,QAAQ,EAAGC,CAAC,IAAK7E,UAAU,CAAC6E,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxK5E,OAAA;UAAQ+E,OAAO,EAAE9B,WAAY;UAACsB,SAAS,EAAC,4CAA4C;UAAAC,QAAA,eAClFxE,OAAA,CAACN,YAAY;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN5E,OAAA;MAAKuE,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1CxE,OAAA;QAAIuE,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBACjDxE,OAAA,CAACJ,aAAa;UAAC2E,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,yBACpC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL5E,OAAA;QAAUuE,SAAS,EAAC,gCAAgC;QAACU,WAAW,EAAC,oBAAoB;QAACC,KAAK,EAAE9D,WAAY;QAAC+D,QAAQ,EAAGC,CAAC,IAAK/D,cAAc,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7J5E,OAAA;QAAQuE,SAAS,EAAC,gDAAgD;QAACQ,OAAO,EAAEf,UAAW;QAAAQ,QAAA,gBACrFxE,OAAA,CAACH,WAAW;UAAC0E,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzE,EAAA,CArMIF,QAAQ;AAAAyF,EAAA,GAARzF,QAAQ;AAuMd,eAAeA,QAAQ;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}