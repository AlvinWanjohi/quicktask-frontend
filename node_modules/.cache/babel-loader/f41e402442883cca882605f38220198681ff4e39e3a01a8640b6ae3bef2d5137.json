{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { loginUser, registerUser, logoutUser } from \"../services/authService\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Try to get user data from localStorage, if available\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  useEffect(() => {\n    // Whenever user state changes, update localStorage\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n  }, [user]);\n  const handleLogin = async (email, password) => {\n    try {\n      const data = await loginUser(email, password);\n      if (data !== null && data !== void 0 && data.token) {\n        const userData = {\n          token: data.token,\n          email: data.email,\n          id: data.id\n        };\n        setUser(userData); // Set the user state after successful login\n      } else {\n        console.error(\"Login failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error.message || error);\n    }\n  };\n  const handleRegister = async (name, email, password) => {\n    try {\n      const data = await registerUser(name, email, password);\n      if (data !== null && data !== void 0 && data.token) {\n        const userData = {\n          token: data.token,\n          email: data.email,\n          id: data.id\n        };\n        setUser(userData); // Set the user state after successful registration\n      } else {\n        console.error(\"Registration failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error.message || error);\n    }\n  };\n  const handleLogout = () => {\n    logoutUser(); // Call logout function (clear any session data on backend if needed)\n    setUser(null); // Clear the user state and remove from localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      handleLogin,\n      handleRegister,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to access the AuthContext\n_s(AuthProvider, \"R5jDyEAOaaRTfPTYe1C2L4ksViE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","loginUser","registerUser","logoutUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","handleLogin","email","password","data","token","userData","id","console","error","message","handleRegister","name","handleLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\nimport { loginUser, registerUser, logoutUser } from \"../services/authService\";\n\n// Create the AuthContext\nexport const AuthContext = createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    // Try to get user data from localStorage, if available\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  useEffect(() => {\n    // Whenever user state changes, update localStorage\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n  }, [user]);\n\n  const handleLogin = async (email, password) => {\n    try {\n      const data = await loginUser(email, password);\n      if (data?.token) {\n        const userData = { token: data.token, email: data.email, id: data.id };\n        setUser(userData); // Set the user state after successful login\n      } else {\n        console.error(\"Login failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error.message || error);\n    }\n  };\n\n  const handleRegister = async (name, email, password) => {\n    try {\n      const data = await registerUser(name, email, password);\n      if (data?.token) {\n        const userData = { token: data.token, email: data.email, id: data.id };\n        setUser(userData); // Set the user state after successful registration\n      } else {\n        console.error(\"Registration failed: No token received\");\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error.message || error);\n    }\n  };\n\n  const handleLogout = () => {\n    logoutUser(); // Call logout function (clear any session data on backend if needed)\n    setUser(null); // Clear the user state and remove from localStorage\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, handleLogin, handleRegister, handleLogout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to access the AuthContext\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}