{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\nimport { registerUser, loginUser, logoutUser } from \"../services/authService\";\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // ✅ Hook for redirection\n\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // Check if user is logged in\n  const checkUserLoggedIn = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (storedUser) setUser(storedUser);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async credentials => {\n    try {\n      const response = await loginUser(credentials);\n      if (response.success) {\n        localStorage.setItem(\"authToken\", response.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n\n        // ✅ Redirect after login\n        navigate(\"/\");\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Login failed. Try again.\"\n      };\n    }\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    logoutUser();\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"user\");\n    setUser(null);\n\n    // ✅ Redirect to homepage after logout\n    navigate(\"/login\");\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await registerUser(userData);\n      if (response.success) {\n        localStorage.setItem(\"authToken\", response.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n\n        // ✅ Redirect after registration\n        navigate(\"/\");\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Registration failed. Try again.\"\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      handleLogout,\n      register,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within an AuthProvider\");\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","registerUser","loginUser","logoutUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","checkUserLoggedIn","token","localStorage","getItem","storedUser","JSON","parse","error","console","login","credentials","response","success","setItem","stringify","handleLogout","removeItem","register","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\nimport { registerUser, loginUser, logoutUser } from \"../services/authService\";\n\n// Create auth context\nexport const AuthContext = createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate(); // ✅ Hook for redirection\n\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  // Check if user is logged in\n  const checkUserLoggedIn = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (storedUser) setUser(storedUser);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      const response = await loginUser(credentials);\n      if (response.success) {\n        localStorage.setItem(\"authToken\", response.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n        \n        // ✅ Redirect after login\n        navigate(\"/\"); \n        \n        return { success: true };\n      }\n      return { success: false, error: response.error };\n    } catch (error) {\n      return { success: false, error: \"Login failed. Try again.\" };\n    }\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    logoutUser();\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    \n    // ✅ Redirect to homepage after logout\n    navigate(\"/login\");\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await registerUser(userData);\n      if (response.success) {\n        localStorage.setItem(\"authToken\", response.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n        \n        // ✅ Redirect after registration\n        navigate(\"/\"); \n        \n        return { success: true };\n      }\n      return { success: false, error: response.error };\n    } catch (error) {\n      return { success: false, error: \"Registration failed. Try again.\" };\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, handleLogout, register, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use AuthContext\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within an AuthProvider\");\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}