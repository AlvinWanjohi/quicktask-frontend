{"ast":null,"code":"import { createClient } from \"@supabase/supabase-js\";\n\n// Ensure that the environment variables are correctly loaded\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Validate the environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error(\"ERROR: Supabase URL and Anon Key are required but missing.\");\n  throw new Error(\"Supabase URL and Anon Key must be provided in environment variables.\");\n}\n\n// Initialize the Supabase client with configuration\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    // Ensures the session is persisted across page reloads\n    autoRefreshToken: true,\n    // Automatically refreshes the session token before it expires\n    detectSessionInUrl: true // Detects session state from the URL (used for social login)\n  }\n});\nconsole.log(\"Supabase client initialized successfully!\");\nexport default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","error","Error","supabase","auth","persistSession","autoRefreshToken","detectSessionInUrl","log"],"sources":["/home/alvin/Documents/quicktask-frontend/src/utils/supabaseClient.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\n// Ensure that the environment variables are correctly loaded\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Validate the environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error(\"ERROR: Supabase URL and Anon Key are required but missing.\");\n  throw new Error(\"Supabase URL and Anon Key must be provided in environment variables.\");\n}\n\n// Initialize the Supabase client with configuration\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true, // Ensures the session is persisted across page reloads\n    autoRefreshToken: true, // Automatically refreshes the session token before it expires\n    detectSessionInUrl: true, // Detects session state from the URL (used for social login)\n  },\n});\n\nconsole.log(\"Supabase client initialized successfully!\");\n\nexport default supabase;\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;;AAE/D;AACA,IAAI,CAACL,WAAW,IAAI,CAACI,eAAe,EAAE;EACpCE,OAAO,CAACC,KAAK,CAAC,4DAA4D,CAAC;EAC3E,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;AACzF;;AAEA;AACA,MAAMC,QAAQ,GAAGV,YAAY,CAACC,WAAW,EAAEI,eAAe,EAAE;EAC1DM,IAAI,EAAE;IACJC,cAAc,EAAE,IAAI;IAAE;IACtBC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,kBAAkB,EAAE,IAAI,CAAE;EAC5B;AACF,CAAC,CAAC;AAEFP,OAAO,CAACQ,GAAG,CAAC,2CAA2C,CAAC;AAExD,eAAeL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}