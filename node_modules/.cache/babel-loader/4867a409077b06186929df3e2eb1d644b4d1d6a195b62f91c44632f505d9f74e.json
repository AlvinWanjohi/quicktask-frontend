{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser, loginUser, logoutUser } from \"../services/authService\";\nimport { supabase } from \"../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const createProfile = async (userId, email) => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"profiles\").insert([{\n      id: userId,\n      email: email\n    }]);\n    if (error) console.error(\"Error creating profile:\", error);else console.log(\"Profile created:\", data);\n  };\n  useEffect(() => {\n    const fetchUserProfileAndTasks = async () => {\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.auth.getUser();\n      if (userError || !(userData !== null && userData !== void 0 && userData.user)) {\n        console.error(\"Error fetching user:\", userError);\n        return;\n      }\n      const userId = userData.user.id;\n      const userEmail = userData.user.email;\n      const {\n        data: profileDaa,\n        error: profileError\n      } = await supabase.from(\"profiles\").select(\"*\").eq(\"id\", userId).maybeSingle();\n      if (profileError) {\n        console.error(\"Error fetching profile:\", profileError);\n        return;\n      }\n      if (!profileData) {\n        console.warn(\"No profile found, creating one...\");\n        await createProfile(userId, userEmail);\n      } else {\n        console.log(\"Profile found:\", profileData);\n        setProfile(profileData);\n      }\n    };\n    fetchUserProfileAndTasks();\n  }, []);\n  const getAuthToken = () => localStorage.getItem(\"token\");\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n  const checkUserLoggedIn = async () => {\n    try {\n      const token = getAuthToken();\n      const storedUser = localStorage.getItem(\"user\");\n      if (token && storedUser) {\n        setUser(JSON.parse(storedUser));\n        console.log(\"User restored from localStorage:\", JSON.parse(storedUser));\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await loginUser(credentials);\n      if (response.user && response.access_token) {\n        localStorage.setItem(\"token\", response.access_token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n        console.log(\"User logged in:\", response.user);\n        navigate(\"/\");\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Login failed. Try again.\"\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await logoutUser();\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      setUser(null);\n      setProfile(null);\n      setTasks([]);\n      console.log(\"User logged out\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n  const register = async userData => {\n    try {\n      const {\n        user,\n        error\n      } = await supabase.auth.signUp({\n        email: userData.email,\n        password: userData.password\n      });\n      if (error) {\n        console.error(\"Signup error:\", error);\n        return {\n          success: false,\n          error: error.message\n        };\n      }\n      if (user) {\n        await supabase.from(\"profiles\").insert([{\n          id: user.id,\n          email: user.email\n        }]);\n        console.log(\"Profile created for new user:\", user.id);\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Registration failed. Try again.\"\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      profile,\n      tasks,\n      loading,\n      login,\n      logout,\n      register,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"XGveN6cI6QFwoosY4Y6mxqKAi8E=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within an AuthProvider\");\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","registerUser","loginUser","logoutUser","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","profile","setProfile","tasks","setTasks","loading","setLoading","navigate","createProfile","userId","email","data","error","from","insert","id","console","log","fetchUserProfileAndTasks","userData","userError","auth","getUser","userEmail","profileDaa","profileError","select","eq","maybeSingle","profileData","warn","getAuthToken","localStorage","getItem","checkUserLoggedIn","token","storedUser","JSON","parse","login","credentials","response","access_token","setItem","stringify","success","logout","removeItem","register","signUp","password","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser, loginUser, logoutUser } from \"../services/authService\";\nimport { supabase } from \"../utils/supabaseClient\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [tasks, setTasks] = useState([]); \n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const createProfile = async (userId, email) => {\n    const { data, error } = await supabase\n      .from(\"profiles\")\n      .insert([{ id: userId, email: email }]);\n  \n    if (error) console.error(\"Error creating profile:\", error);\n    else console.log(\"Profile created:\", data);\n  };\n  \n  useEffect(() => {\n    const fetchUserProfileAndTasks = async () => {\n      const { data: userData, error: userError } = await supabase.auth.getUser();\n      if (userError || !userData?.user) {\n        console.error(\"Error fetching user:\", userError);\n        return;\n      }\n  \n      const userId = userData.user.id;\n      const userEmail = userData.user.email;\n  \n      const { data: profileDaa, error: profileError } = await supabase\n        .from(\"profiles\")\n        .select(\"*\")\n        .eq(\"id\", userId)\n        .maybeSingle(); \n  \n      if (profileError) {\n        console.error(\"Error fetching profile:\", profileError);\n        return;\n      }\n  \n      if (!profileData) {\n        console.warn(\"No profile found, creating one...\");\n        await createProfile(userId, userEmail);\n      } else {\n        console.log(\"Profile found:\", profileData);\n        setProfile(profileData);\n      }\n    };\n  \n    fetchUserProfileAndTasks();\n  }, []);\n  \n  \n  const getAuthToken = () => localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  const checkUserLoggedIn = async () => {\n    try {\n      const token = getAuthToken();\n      const storedUser = localStorage.getItem(\"user\");\n\n      if (token && storedUser) {\n        setUser(JSON.parse(storedUser));\n        console.log(\"User restored from localStorage:\", JSON.parse(storedUser));\n      } else {\n        setUser(null);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      const response = await loginUser(credentials);\n      if (response.user && response.access_token) {\n        localStorage.setItem(\"token\", response.access_token);\n        localStorage.setItem(\"user\", JSON.stringify(response.user));\n        setUser(response.user);\n        console.log(\"User logged in:\", response.user);\n        navigate(\"/\");\n        return { success: true };\n      }\n      return { success: false, error: response.error };\n    } catch (error) {\n      return { success: false, error: \"Login failed. Try again.\" };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await logoutUser();\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      setUser(null);\n      setProfile(null);\n      setTasks([]); \n      console.log(\"User logged out\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const { user, error } = await supabase.auth.signUp({\n        email: userData.email,\n        password: userData.password,\n      });\n  \n      if (error) {\n        console.error(\"Signup error:\", error);\n        return { success: false, error: error.message };\n      }\n  \n      if (user) {\n        await supabase.from(\"profiles\").insert([{ id: user.id, email: user.email }]);\n        console.log(\"Profile created for new user:\", user.id);\n      }\n  \n      return { success: true };\n    } catch (error) {\n      return { success: false, error: \"Registration failed. Try again.\" };\n    }\n  };\n  \n\n  return (\n    <AuthContext.Provider value={{ user, profile, tasks, loading, login, logout, register, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error(\"useAuth must be used within an AuthProvider\");\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}