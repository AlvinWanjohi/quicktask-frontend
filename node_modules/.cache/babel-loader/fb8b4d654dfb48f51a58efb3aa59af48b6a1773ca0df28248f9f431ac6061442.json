{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const setAuthToken = token => {\n  if (token) {\n    localStorage.setItem(\"authToken\", token);\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    localStorage.removeItem(\"authToken\");\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Automatically attach token if available in localStorage\nconst authToken = localStorage.getItem(\"authToken\");\nif (authToken) {\n  setAuthToken(authToken);\n}\n\n// Global error handling\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error(\"API Error:\", (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","apiClient","create","baseURL","headers","setAuthToken","token","localStorage","setItem","defaults","common","removeItem","authToken","getItem","interceptors","response","use","error","_error$response","console","data","message","Promise","reject"],"sources":["/home/alvin/Documents/quicktask-frontend/src/utils/apiClient.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    localStorage.setItem(\"authToken\", token);\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    localStorage.removeItem(\"authToken\");\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Automatically attach token if available in localStorage\nconst authToken = localStorage.getItem(\"authToken\");\nif (authToken) {\n  setAuthToken(authToken);\n}\n\n// Global error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error(\"API Error:\", error?.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;IACxCL,SAAS,CAACQ,QAAQ,CAACL,OAAO,CAACM,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;EACxE,CAAC,MAAM;IACLC,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;IACpC,OAAOV,SAAS,CAACQ,QAAQ,CAACL,OAAO,CAACM,MAAM,CAAC,eAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,MAAME,SAAS,GAAGL,YAAY,CAACM,OAAO,CAAC,WAAW,CAAC;AACnD,IAAID,SAAS,EAAE;EACbP,YAAY,CAACO,SAAS,CAAC;AACzB;;AAEA;AACAX,SAAS,CAACa,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTC,OAAO,CAACF,KAAK,CAAC,YAAY,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEF,QAAQ,cAAAG,eAAA,uBAAfA,eAAA,CAAiBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EACnE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}