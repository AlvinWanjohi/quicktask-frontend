{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\nconsole.log(\"API BASE URL:\", API_BASE_URL);\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Function to get token from sessionStorage first, then fallback to localStorage\nconst getAuthToken = () => sessionStorage.getItem(\"authToken\") || localStorage.getItem(\"authToken\");\n\n// Function to set or remove auth token\nexport const setAuthToken = token => {\n  if (token) {\n    sessionStorage.setItem(\"authToken\", token); // Prioritize sessionStorage\n    localStorage.setItem(\"authToken\", token);\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    sessionStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"authToken\");\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Automatically add the token to every request\napiClient.interceptors.request.use(config => {\n  const token = getAuthToken();\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Handle 401 Unauthorized errors\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error(\"API Error:\", (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    console.warn(\"Unauthorized: Token may have expired. Logging out...\");\n    setAuthToken(null);\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// Set initial token if available\nconst initialAuthToken = getAuthToken();\nif (initialAuthToken) {\n  setAuthToken(initialAuthToken);\n}\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","console","log","apiClient","create","baseURL","headers","getAuthToken","sessionStorage","getItem","localStorage","setAuthToken","token","setItem","defaults","common","removeItem","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response2","data","message","status","warn","window","location","href","initialAuthToken"],"sources":["/home/alvin/Documents/quicktask-frontend/src/utils/apiClient.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\nconsole.log(\"API BASE URL:\", API_BASE_URL);\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Function to get token from sessionStorage first, then fallback to localStorage\nconst getAuthToken = () => sessionStorage.getItem(\"authToken\") || localStorage.getItem(\"authToken\");\n\n// Function to set or remove auth token\nexport const setAuthToken = (token) => {\n  if (token) {\n    sessionStorage.setItem(\"authToken\", token);  // Prioritize sessionStorage\n    localStorage.setItem(\"authToken\", token);  \n\n    apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    sessionStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"authToken\");\n\n    delete apiClient.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Automatically add the token to every request\napiClient.interceptors.request.use(\n  (config) => {\n    const token = getAuthToken();\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Handle 401 Unauthorized errors\napiClient.interceptors.response.use(\n  (response) => response,  \n  (error) => {\n    console.error(\"API Error:\", error?.response?.data || error.message);\n\n    if (error.response?.status === 401) {\n      console.warn(\"Unauthorized: Token may have expired. Logging out...\");\n      setAuthToken(null);  \n      window.location.href = \"/login\"; \n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Set initial token if available\nconst initialAuthToken = getAuthToken();\nif (initialAuthToken) {\n  setAuthToken(initialAuthToken);\n}\n\nexport default apiClient;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAClFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,YAAY,CAAC;AAE1C,MAAMM,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC7BC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAMC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,IAAIC,YAAY,CAACD,OAAO,CAAC,WAAW,CAAC;;AAEnG;AACA,OAAO,MAAME,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTJ,cAAc,CAACK,OAAO,CAAC,WAAW,EAAED,KAAK,CAAC,CAAC,CAAE;IAC7CF,YAAY,CAACG,OAAO,CAAC,WAAW,EAAED,KAAK,CAAC;IAExCT,SAAS,CAACW,QAAQ,CAACR,OAAO,CAACS,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACxE,CAAC,MAAM;IACLJ,cAAc,CAACQ,UAAU,CAAC,WAAW,CAAC;IACtCN,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IAEpC,OAAOb,SAAS,CAACW,QAAQ,CAACR,OAAO,CAACS,MAAM,CAAC,eAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACAZ,SAAS,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMR,KAAK,GAAGL,YAAY,CAAC,CAAC;EAC5B,IAAIK,KAAK,EAAE;IACTQ,MAAM,CAACd,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUM,KAAK,EAAE;EACrD;EACA,OAAOQ,MAAM;AACf,CAAC,EACAC,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAlB,SAAS,CAACc,YAAY,CAACO,QAAQ,CAACL,GAAG,CAChCK,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,gBAAA;EACTzB,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAE,CAAAA,KAAK,aAALA,KAAK,wBAAAI,eAAA,GAALJ,KAAK,CAAEG,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBE,IAAI,KAAIN,KAAK,CAACO,OAAO,CAAC;EAEnE,IAAI,EAAAF,gBAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;IAClC5B,OAAO,CAAC6B,IAAI,CAAC,sDAAsD,CAAC;IACpEnB,YAAY,CAAC,IAAI,CAAC;IAClBoB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EAEA,OAAOX,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMa,gBAAgB,GAAG3B,YAAY,CAAC,CAAC;AACvC,IAAI2B,gBAAgB,EAAE;EACpBvB,YAAY,CAACuB,gBAAgB,CAAC;AAChC;AAEA,eAAe/B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}