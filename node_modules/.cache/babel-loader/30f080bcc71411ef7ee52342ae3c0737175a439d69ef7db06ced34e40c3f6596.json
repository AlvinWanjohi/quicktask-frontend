{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport supabase from \"../utils/supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      try {\n        let {\n          data,\n          error\n        } = await supabase.from(\"tasks\").select(\"*\");\n        if (error) throw error;\n        setTasks(data || []);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const filteredTasks = tasks.filter(task => {\n    return (filter === \"all\" || task.status === filter) && task.title.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Available Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search tasks...\",\n        className: \"border p-2 rounded w-full\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border p-2 rounded\",\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"open\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-blue-600\",\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Wqf4hhJpPnRn5sDEFVQjDWtNIOQ=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","error","setError","searchTerm","setSearchTerm","filter","setFilter","fetchTasks","data","from","select","err","message","filteredTasks","task","status","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","description","id","_c","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport supabase from \"../utils/supabaseClient\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\");\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      try {\n        let { data, error } = await supabase.from(\"tasks\").select(\"*\");\n        if (error) throw error;\n        setTasks(data || []);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const filteredTasks = tasks.filter(task => {\n    return (\n      (filter === \"all\" || task.status === filter) &&\n      task.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  });\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Available Tasks</h1>\n      <div className=\"flex space-x-4 mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search tasks...\"\n          className=\"border p-2 rounded w-full\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <select\n          className=\"border p-2 rounded\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"open\">Open</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </div>\n      {loading ? (\n        <p>Loading tasks...</p>\n      ) : error ? (\n        <p className=\"text-red-500\">Error: {error}</p>\n      ) : filteredTasks.length === 0 ? (\n        <p>No tasks found.</p>\n      ) : (\n        <ul className=\"space-y-4\">\n          {filteredTasks.map((task) => (\n            <li key={task.id} className=\"border p-4 rounded shadow\">\n              <h2 className=\"text-lg font-semibold\">{task.title}</h2>\n              <p className=\"text-gray-600\">{task.description}</p>\n              <p className=\"text-sm text-blue-600\">Status: {task.status}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}