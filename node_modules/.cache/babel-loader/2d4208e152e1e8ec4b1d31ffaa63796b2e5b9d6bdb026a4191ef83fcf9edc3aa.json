{"ast":null,"code":"var _jsxFileName = \"/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { registerUser, loginUser, logoutUser } from \"../services/authService\";\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setUser({\n        token\n      });\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Register a new user\n  const handleRegister = async userData => {\n    try {\n      const data = await registerUser(userData);\n      setUser(data.user);\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  // Login user\n  const handleLogin = async credentials => {\n    try {\n      const data = await loginUser(credentials);\n      setUser(data.user);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  // Logout user\n  const handleLogout = () => {\n    logoutUser();\n    setUser(null); // Clear user data\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      handleRegister,\n      handleLogin,\n      handleLogout,\n      loading\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["registerUser","loginUser","logoutUser","React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","handleRegister","userData","data","error","console","handleLogin","credentials","handleLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/alvin/Documents/quicktask-frontend/src/context/AuthContext.js"],"sourcesContent":["import { registerUser, loginUser, logoutUser } from \"../services/authService\";\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\n\n\n// Create context\nconst AuthContext = createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setUser({ token });\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Register a new user\n  const handleRegister = async (userData) => {\n    try {\n      const data = await registerUser(userData);\n      setUser(data.user);\n    } catch (error) {\n      console.error(\"Registration failed\", error);\n    }\n  };\n\n  // Login user\n  const handleLogin = async (credentials) => {\n    try {\n      const data = await loginUser(credentials);\n      setUser(data.user);\n    } catch (error) {\n      console.error(\"Login failed\", error);\n    }\n  };\n\n  // Logout user\n  const handleLogout = () => {\n    logoutUser();\n    setUser(null); // Clear user data\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, handleRegister, handleLogin, handleLogout, loading }}>\n      {loading ? <div>Loading...</div> : children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":";;;AAAA,SAASA,YAAY,EAAEC,SAAS,EAAEC,UAAU,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAG7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTH,OAAO,CAAC;QAAEG;MAAM,CAAC,CAAC;MAClBD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMvB,YAAY,CAACsB,QAAQ,CAAC;MACzCP,OAAO,CAACQ,IAAI,CAACT,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF,MAAMJ,IAAI,GAAG,MAAMtB,SAAS,CAAC0B,WAAW,CAAC;MACzCZ,OAAO,CAACQ,IAAI,CAACT,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB1B,UAAU,CAAC,CAAC;IACZa,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEO,cAAc;MAAEK,WAAW;MAAEE,YAAY;MAAEZ;IAAQ,CAAE;IAAAJ,QAAA,EACvFI,OAAO,gBAAGP,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAAGtB;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CA/CaF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAgDzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO/B,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAAC2B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}