{"ast":null,"code":"// utils/authService.js\nimport apiClient from \"../utils/apiClient\";\nexport const registerUser = async userData => {\n  try {\n    const response = await apiClient.post(\"/auth/register\", userData);\n    const {\n      user,\n      message\n    } = response.data;\n\n    // After registration, marking the profile as completed\n    await apiClient.put(`/users/${user.id}`, {\n      profileCompleted: true\n    });\n    return {\n      user,\n      message\n    };\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Registration Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: \"Registration failed\"\n    };\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await apiClient.post(\"/auth/login\", credentials);\n    const {\n      access_token,\n      user\n    } = response.data;\n    if (access_token) {\n      localStorage.setItem(\"token\", access_token);\n      apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n    }\n    return {\n      user,\n      access_token\n    };\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Login Error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n      message: \"Login failed\"\n    };\n  }\n};\nexport const socialLogin = async provider => {\n  try {\n    const response = await apiClient.get(`/auth/social/${provider}`);\n    const {\n      access_token,\n      user\n    } = response.data;\n    if (access_token) {\n      localStorage.setItem(\"token\", access_token);\n      apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n    }\n    return {\n      user,\n      access_token\n    };\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(\"Social Login Error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n      message: \"Social login failed\"\n    };\n  }\n};\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  delete apiClient.defaults.headers.common[\"Authorization\"];\n};\nexport const verifyEmail = async token => {\n  try {\n    const response = await apiClient.post(\"/auth/verify-email\", {\n      token\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response8;\n    console.error(\"Email Verification Error:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || {\n      message: \"Email verification failed\"\n    };\n  }\n};","map":{"version":3,"names":["apiClient","registerUser","userData","response","post","user","message","data","put","id","profileCompleted","error","_error$response","_error$response2","console","loginUser","credentials","access_token","localStorage","setItem","defaults","headers","common","_error$response3","_error$response4","socialLogin","provider","get","_error$response5","_error$response6","logoutUser","removeItem","verifyEmail","token","_error$response7","_error$response8"],"sources":["/home/alvin/Documents/quicktask-frontend/src/services/authService.js"],"sourcesContent":["// utils/authService.js\nimport apiClient from \"../utils/apiClient\";\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await apiClient.post(\"/auth/register\", userData);\n    const { user, message } = response.data;\n\n    // After registration, marking the profile as completed\n    await apiClient.put(`/users/${user.id}`, { profileCompleted: true });\n\n    return { user, message };\n  } catch (error) {\n    console.error(\"Registration Error:\", error.response?.data || error.message);\n    throw error.response?.data || { message: \"Registration failed\" };\n  }\n};\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await apiClient.post(\"/auth/login\", credentials);\n    const { access_token, user } = response.data;\n\n    if (access_token) {\n      localStorage.setItem(\"token\", access_token);\n      apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n    }\n\n    return { user, access_token };\n  } catch (error) {\n    console.error(\"Login Error:\", error.response?.data || error.message);\n    throw error.response?.data || { message: \"Login failed\" };\n  }\n};\n\nexport const socialLogin = async (provider) => {\n  try {\n    const response = await apiClient.get(`/auth/social/${provider}`);\n    const { access_token, user } = response.data;\n\n    if (access_token) {\n      localStorage.setItem(\"token\", access_token);\n      apiClient.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n    }\n\n    return { user, access_token };\n  } catch (error) {\n    console.error(\"Social Login Error:\", error.response?.data || error.message);\n    throw error.response?.data || { message: \"Social login failed\" };\n  }\n};\n\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  delete apiClient.defaults.headers.common[\"Authorization\"];\n};\n\nexport const verifyEmail = async (token) => {\n  try {\n    const response = await apiClient.post(\"/auth/verify-email\", { token });\n    return response.data;\n  } catch (error) {\n    console.error(\"Email Verification Error:\", error.response?.data || error.message);\n    throw error.response?.data || { message: \"Email verification failed\" };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}